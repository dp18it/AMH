@using AMH.Common;
@using AMH.Pages;
@{
    //ViewBag.Title = "My-account";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Html.AntiForgeryToken()
<link rel="stylesheet" href="https://cdn.datatables.net/v/bs4/jszip-2.5.0/dt-1.10.25/b-1.7.1/b-html5-1.7.1/b-print-1.7.1/r-2.2.9/datatables.min.css" />
<script src="~/assets/vendors/jquery/dist/jquery.min.js"></script>
<script src="~/assets/js/jquery.validate.js"></script>
<!-- Main Js -->
<script src="~/assets/js/main.min.js"></script>
<script src="~/assets/vendors/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/pdfmake.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/vfs_fonts.js"></script>
<script type="text/javascript" src="https://cdn.datatables.net/v/bs4/jszip-2.5.0/dt-1.10.25/b-1.7.1/b-html5-1.7.1/b-print-1.7.1/r-2.2.9/datatables.min.js"></script>
<body>

    <div class="breadcrumb-area mb-50">
        <div class="container">
            <div class="row">
                <div class="col">
                    <div class="breadcrumb-container">
                        <ul>
                            <li><a href="/Home/Index"><i class="fa fa-home"></i>Home</a></li>
                            <li class="active">My Account</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="my-account-section section position-relative mb-50 fix">
        <div class="container">
            <div class="row">
                <div class="col-12">

                    <div class="row">

                        <!-- My Account Tab Menu Start -->
                        <div class="col-lg-3 col-12">
                            <div class="myaccount-tab-menu nav" role="tablist">

                                <a href="#account-info " id="slide1" class="active" onclick="RemClass1()" data-toggle="tab"><i class="fa fa-user"></i> Account Details</a>

                                <a href="#orders" id="slide2" data-toggle="tab" onclick="RemClass2()"><i class="fa fa-cart-arrow-down"></i> Orders</a>

                                <a href="#changepassword" id="slide3" onclick="RemClass3()" data-toggle="tab"> <i class="fa fa-credit-card"></i> Change Password</a>

                                <a href="#address-edit" id="slide4" onclick="RemClass4()" data-toggle="tab"><i class="fa fa-map-marker"></i> address</a>

                                <a href="@Url.Action("User_SignOut","Myaccount")" id="slide5"><i class="fa fa-sign-out" onclick="RemClass5()"></i> Logout</a>

                            </div>
                        </div>
                        <div class="col-lg-9 col-12">
                            <div class="tab-content" id="myaccountContent">

                                <div class="tab-pane fade" id="orders" role="tabpanel">
                                    <div class="myaccount-content">
                                        <h3>Orders</h3>

                                        <div class="myaccount-table table-responsive text-center" id="Order">

                                        </div>
                                    </div>
                                </div>
                                <div class="tab-pane fade" id="address-edit" role="tabpanel">
                                    <div class="myaccount-content">
                                        <h3>Billing Address</h3>
                                        <div class="row">
                                            <div class="col-md-6 mb-20">
                                                <label>Address Line 1</label>
                                                <textarea class="mb-0" cols="45" id="Address1" Name="Address1" placeholder="House No/,Socity/Bulding Name"></textarea>
                                            </div>
                                            <div class="col-md-6 mb-20">
                                                <label>Address Line 2(Optional)</label>
                                                <textarea class="mb-0" cols="45" id="Address2" Name="Address2" placeholder="Near by place/ Area"></textarea>
                                            </div>
                                            <div class="col-md-4 mb-20">
                                                <label>State</label>
                                                @Html.Raw(Html.DropDownList("StateId", (IEnumerable<SelectListItem>)ViewBag.StateAll, new { @Id = "StateId", @class = "form-control" }))
                                            </div>
                                            <div class="col-md-4 mb-20">
                                                <label>City</label>
                                                @Html.Raw(Html.DropDownList("CityId", (IEnumerable<SelectListItem>)ViewBag.CityAll, new { @Id = "CityId", @class = "form-control" }))
                                            </div>
                                            <div class="col-md-4 mb-20">
                                                <label>PinCode</label>
                                                <div>
                                                    <input class="mb-0" type="number" id="PinCode" style=" border: 1px solid #ced4da; border-radius: 0.25rem;width: 100%;height: calc(1.5em + 0.75rem + 2px);" Name="PinCode" placeholder="Pincode">
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-12" style="margin-bottom: 30px;margin-left: 300px;">
                                            <button type="submit" id="btnLogin" onclick="AddUser()" class="register-button mt-0">Update</button>
                                        </div>
                                        @*<a href="#" class="btn d-inline-block edit-address-btn"><i class="fa fa-edit"></i>Edit Address</a>*@
                                    </div>
                                </div>
                                <div class="tab-pane fade" id="changepassword" role="tabpanel">
                                    <div class="myaccount-content" style=" padding-bottom: 56px;">
                                        <h3>Change Password</h3>

                                        <form class="form" id="ChangePasswordForm" name="ChangePasswordForm">
                                            <div class="form-group">
                                                <label for="OldPassword">Current Password</label>
                                                <input type="password" class="form-control" name="OldPassword" id="OldPassword" placeholder="Enter Current password">
                                            </div>
                                            <div class="form-group">
                                                <label for="NewPassword">New Password</label>
                                                <input type="password" class="form-control" id="NewPassword" name="NewPassword" placeholder="Enter New Password">
                                            </div>
                                            <div class="form-group">
                                                <label for="ConfirmPassword">Confirm Password</label>
                                                <input type="password" class="form-control" id="ConfirmPassword" name="ConfirmPassword" placeholder="Enter Confirm Password">
                                            </div>
                                            <div class="form-group">
                                                <button type="submit" id="userSave"class="register-button mt-0">Save</button>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                                <div class="tab-pane fade show active" id="account-info" role="tabpanel">
                                    <div class="myaccount-content">
                                        <h3>Account Details</h3>
                                        <div class="account-details-form ">
                                            <form action="#" method="post" id="viewuserdetail">
                                                <div class="row">
                                                    <div class="col-md-12 col-12 mb-20">
                                                        <input type="hidden" id="Users_Id" name="Users_Id" />
                                                        <label for="Photo">Profile Image</label>
                                                        <div class="form-group">
                                                            <input type="file" onchange="readURL(this)" style="border: 0px; color: white;" id="ProfileImg" name="ProfileImg">
                                                            <img id="ImageView" style="width: 40% !important" height="100px" class="form-control-file " />
                                                        </div>
                                                    </div>
                                                    <div class="col-md-6 col-12 mb-20">
                                                        <label>First Name</label>
                                                        <input class="mb-0" id="FirstName" Name="FirstName" type="text" placeholder="First Name">
                                                    </div>
                                                    <div class="col-md-6 col-12 mb-20">
                                                        <label>Last Name</label>
                                                        <input class="mb-0" id="LastName" Name="LastName" type="text" placeholder="Last Name">
                                                    </div>
                                                    <div class="col-md-6 mb-20">
                                                        <label>Contact Number</label>
                                                        <input class="mb-0" type="number" id="ContactNo" Name="ContactNo" placeholder="Contact number">
                                                    </div>
                                                    <div class="col-md-6 mb-20">
                                                        <label> Email Address</label>
                                                        <input class="mb-0" type="email" id="Email" Name="Email" placeholder="Email Address ">
                                                    </div>
                                                    <div class="col-12" style="margin-left: 300;">
                                                        <button type="submit" id="btnLogin" onclick="AddUser()" class="register-button mt-0">Update Details</button>
                                                    </div>
                                                </div>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </div>



                            <!-- Single Tab Content End -->
                        </div>

                    </div>
                    <!-- My Account Tab Content End -->
                </div>

            </div>
        </div>
    </div>
    <div class="modal" id="viewproducts" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h6 class="title" id="defaultModalLabel">Products</h6>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="row">
                    <div class="col-xxl-12 col-lg-12 col-md-12 col-12 mb-3">
                        @Html.AntiForgeryToken()
                        <div class="portlet-body table-responsive" id="divOrderProductTable">
                            <table class="table table-striped table-bUsersed table-hover" id="OrderProductTable"></table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <a href="#" class="scroll-top"></a>
    <!-- end of scroll to top -->
    <!-- JS
    ============================================ -->
    <!-- jQuery JS -->
    @*<script src="~/Theme/assets/js/vendor/jquery.min.js"></script>
        <script src="~/Theme/assets/js/popper.min.js"></script>
        <script src="~/Theme/assets/js/bootstrap.min.js"></script>
        <script src="~/Theme/assets/js/plugins.js"></script>
        <script src="~/Theme/assets/js/main.js"></script>*@
<script>
        var qunts = '';
        var ProductIds = '';
        var prices = '';
        var limit = 0;
        $(document).ready(() => {
            ViewUser(@ProjectSession.Users_Id);
        });

        function RemClass1() {
            $('#slide1').addClass('active');
            $('#account-info').addClass('show active');
            $('#changepassword').removeClass('show active');
            $('#address-edit').removeClass('show active');
            $('#orders').removeClass('show active');
            $('#slide2').removeClass('active');
            $('#slide3').removeClass('active');
            $('#slide4').removeClass('active');
            $('#slide5').removeClass('active');
        }
        function RemClass2() {
            $('#slide1').removeClass('active');
            $('#account-info').removeClass('show active');
            $('#changepassword').removeClass('show active');
            $('#address-edit').removeClass('show active');
            $('#orders').addClass('show active');
            $('#slide2').addClass('active');
            $('#slide3').removeClass('active');
            $('#slide4').removeClass('active');
            $('#slide5').removeClass('active');
            viewOrder();
        }
        function RemClass3() {
            $('#slide1').removeClass('active');
            $('#account-info').removeClass('show active');
            $('#changepassword').addClass('show active');
            $('#address-edit').removeClass('show active');
            $('#orders').removeClass('show active');
            $('#slide2').removeClass('active');
            $('#slide3').addClass('active');
            $('#slide4').removeClass('active');
            $('#slide5').removeClass('active');
        }
        function RemClass4() {
            $('#slide1').removeClass('active');
            $('#account-info').removeClass('show active');
            $('#changepassword').removeClass('show active');
            $('#address-edit').addClass('show active');
            $('#orders').removeClass('show active');
            $('#slide2').removeClass('active');
            $('#slide3').removeClass('active');
            $('#slide4').addClass('active');
            $('#slide5').removeClass('active');
        }
        function RemClass5() {
            $('#slide1').removeClass('active');
            $('#account-info').removeClass('show active');
            $('#changepassword').removeClass('show active');
            $('#address-edit').removeClass('show active');
            $('#orders').removeClass('show active');
            $('#slide2').removeClass('active');
            $('#slide3').removeClass('active');
            $('#slide4').removeClass('active');
            $('#slide5').addClass('active');
        }
        function readURL(input) {
            // validateFileType();
            $('#ImageView').show();
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#ImageView').attr('src', e.target.result);
                };
                reader.readAsDataURL(input.files[0]);

                if ($('#ProfileImg').hasClass('error')) {
                    $('#ProfileImg').addClass('valid');
                    $('#ProfileImg').removeClass('error');
                }
                $('#ProfileImg-error').attr("style", "display:none");
            }
        }
        function validateFileType(img) {

            var fileName = document.getElementById("ProfileImg").value;

            var idxDot = fileName.lastIndexOf(".") + 1;
            var extFile = fileName.substr(idxDot, fileName.length).toLowerCase();
            if (extFile == "jpg" || extFile == "jpeg" || extFile == "png") {
            }
            else {
                $('#ProfileImg').val('');
                alert("Only jpg/jpeg and png files are allowed!");
            }
        }


        $(function () {
            $("form[name='ChangePasswordForm']").validate({
                rules: {
                    OldPassword: {
                        required: true,
                    },
                    NewPassword: {
                        required: true,
                        minlength: 4
                    },
                    ConfirmPassword: {
                        required: true,
                        equalTo: "#NewPassword",
                        minlength: 4
                    }
                },
                // Specify validation error messages
                messages: {
                    OldPassword: {
                        required: "Please enter correct old password",
                    },
                    NewPassword: {
                        required: "New Password is required",
                        minlength: "Please enter atleast 4 characters",
                    },
                    ConfirmPassword: {
                        required: "Confirm Password is required",
                        equalTo: "New Password and Confirm Password should be same",
                        minlength: "Please enter atleast 4 characters",
                    },
                },
                submitHandler: function (form) {
                    Adituser();
                }
            });
        });


    function Adituser() {
        $("#userSave").hide();
        $("#userClose").hide();
        $(".loading").show();

        $.ajax({
            type: "POST",
            url: '@Url.Action(Actions.ChangePassword, Controllers.Myaccount)',
            data: ({
                Id: '@ProjectSession.Users_Id',
                OldPassword: $("#OldPassword").val(),
                NewPassword: $("#NewPassword").val(),
                ConfirmPassword: $("#ConfirmPassword").val()
            }),
            dataType: 'json',
            success: function (result1) {

                if (result1.Code == 200) {
                    //swal("Your password changed successfully");
                    swal({
                        title: "",
                        text: "Your password changed successfully",
                        icon: "success",
                        timer: 2000
                    })
                    window.location.href= '@Url.Action(Actions.User_SignOut, Controllers.Myaccount)';
                } else if (result1.Code == 403) {
                    //swal("Error !", result1.Message, "error");
                    swal({
                        title: "",
                        text: result1.Message,
                        icon: "warning",
                        timer: 2000
                    })
                    $(".loading").hide();
                    $("#userSave").show();
                    $("#userClose").show();
                }
                else {
                    //swal("Error !", result1.Message, "error");
                    swal({
                        title: "",
                        text: result1.Message,
                        icon: "warning",
                        timer: 2000
                    })
                    $(".loading").hide();
                    $("#userSave").show();
                    $("#userClose").show();
                }
            },
            error: function (error) {
                $(".loading").hide();
                $("#userSave").show();
                $("#userClose").show();

                //show close button
            }
        });
        }
        function viewProduct(pids, pri, qun) {
            prices = pri;
            qunts = qun;
            ProductIds = pids;
            $('#viewproducts').modal('show');
            ProductsDataTable.init();
            $('#OrderProductTable_filter').hide();
        }
        function SearchCriteria1() {
            try {
                var param = {};
                debugger;
                param["prices"] = prices,
                    param["ProductIds"] = ProductIds,
                    param["qunts"] = qunts
                return addRequestVerificationToken(param);
            } catch (e) { }
        }


        function addRequestVerificationToken(data) {
            data.__RequestVerificationToken = $('input[name=__RequestVerificationToken]').val();
            return data;
        }


        function viewOrder(search='', lm=0) {
            $.ajax({
            type: "get",
            url: '@Url.Action(Actions.OrderAMH_All, Controllers.Order)',
            data: { limit: lm, Search: search },
            dataType: 'json',
            success: function (response) {
                limit = lm;
                var htmlData = "";

                if (response.Values.length > 0) {
                    htmlData += `<table class="table table-bordered">`
                    htmlData += `  <thead class="thead-light"> `
                    htmlData += `  <tr> `
                    htmlData += `  <th>Order Id</th > `
                    htmlData += `  <th>Order Date</th> `
                    htmlData += `  <th>Order Status</th> `
                    htmlData += `  <th>Payment Status</th> `
                    htmlData += `  <th>Product</th> `
                    htmlData += `  <th>Action</th> `
                    htmlData += `  </tr> `
                    htmlData += `  </thead>`
                    htmlData += `<tbody>`

                    for (var i = 0; i < response.Values.length; i++) {

                        htmlData += `<tr>`
                        htmlData += `<td>${response.Values[i].Order_Id}</td>`
                        htmlData += `<td>${response.Values[i].Order_DateStr}</td>`
                        htmlData += `<td>${response.Values[i].OrderStatus_Name }</td>`
                        htmlData += `<td>${response.Values[i].PaymentStatus}</td>`
                        htmlData += `<td><input id="edit1" type="submit" name="View Product" value="View Product" onclick="viewProduct(' ${response.Values[i].ProIds}', '${response.Values[i].Prices}', '${response.Values[i].Quantities}');"></td>`
                        if (response.Values[i].OrderStatus == 5) {
                            htmlData += `<td></td>`;
                        }
                        else if (response.Values[i].OrderStatus == 6) {
                            htmlData += `<td></td>`;
                        }
                        else {
                            htmlData += `<td><input id="edit2" type="submit" name="Cancel order" value="Cancel order" onclick="Cancelorder(${response.Values[i].Order_Id});"></td>`
                        }
                        htmlData += ` </tr>`
                    }
                    htmlData += `</tbody>`

                }
                else {

                    htmlData += '<h5 class="text-center">No Record Found</h5>';
                }

                $("#Order").html(htmlData);
            },
            error: function (error) {
                console.log('error', error);
            }
        })
        }

        var ProductsDataTable = function () {
            let initTable1 = function () {
                let table = $('#OrderProductTable');

                let oTable = table.dataTable({
                    "stateSave": true,
                    "autoWidth": false,
                    "paging": true,
                    // Internationalisation. For more info refer to http://datatables.net/manual/i18n
                    "language": {
                        "aria": {
                            "sortAscending": ": activate to sort column ascending",
                            "sortDescending": ": activate to sort column descending"
                        },
                        "emptyTable": "No data available in table",
                        "info": "Showing _START_ to _END_ of _TOTAL_ entries",
                        "infoEmpty": "No entries found",
                        "infoFiltered": "(filtered1 from MAX total entries)",
                        //"lengthMenu": "MENU entries",
                        "search": "Search:",
                        "zeroRecords": "No matching records found"
                    },
                    "pageLength": 10,
                    "processing": true,
                    "serverSide": true,
                    "ajax": {
                        async: true,
                        url: '@Url.Action(Actions.Product_Allbyorder, Controllers.Order)',
                        type: "post",
                        data: SearchCriteria1(),
                    },
                    "columns": [
                        {
                            "title": "Product Id", "data": "Product_Id",
                            "render": function (data, type, row) {
                                let htmlData = "";

                                htmlData = `<p class="mb-0">${row["Product_Id"]}</p>`;

                                return htmlData;
                            }
                            , "orderable": false, "width": "3%"
                        },
                        {
                            "title": "Image", "data": "Product_Image",
                            "render": function (data, type, row) {
                                let htmlData = "";
                                htmlData = `<img title="Photo" class="image-circle" onclick="redirectToNewTab('` + row["Product_ImageUrlStr"] + `')" src="${row["Product_ImageUrlStr"]}" height="50px">`;

                                return htmlData;
                            }
                            , "orderable": false, "width": "3%"
                        },
                        {
                            "title": "Name", "data": "Product_Name",
                            "render": function (data, type, row) {
                                let htmlData = "";

                                htmlData = `<p class="mb-0">${row["Product_Name"]}</p>`;

                                return htmlData;
                            }
                            , "orderable": false, "width": "3%"
                        },
                        {
                            "title": "Quntity", "data": "Product_Quntity",
                            "render": function (data, type, row) {
                                let htmlData = "";

                                htmlData = `<p class="mb-0">${row["Product_Quntity"]}</p>`;

                                return htmlData;
                            }
                            , "orderable": false, "width": "3%"
                        },
                        {
                            "title": "Price", "data": "Product_Price",
                            "render": function (data, type, row) {
                                let htmlData = "";

                                htmlData = `<p class="mb-0">${row["Product_Price"]}</p>`;

                                return htmlData;
                            }
                            , "orderable": false, "width": "3%"
                        },

                    ],
                    // setup buttons extentension: http://datatables.net/extensions/buttons/
                        "buttons": [
                            //{ extend: 'excel', className: 'btn green btn-outline mb-3 mt-1', exportOptions: { columns: [0, 1, 2,3,4] } },
                            //{ extend: 'pdf', className: 'btn green btn-outline mb-3 mt-1', exportOptions: { columns: [0, 1, 2, 3, 4] } },
                            //{ extend: 'print', className: 'btn green btn-outline mb-3 mt-1', exportOptions: { columns: [0, 1, 2, 3, 4] } },

                        ],

                        // setup responsive extension: http://datatables.net/extensions/responsive/
                       // responsive: true,

                        //"lengthMenu": [
                        //    [5, 10, 15, 20, 1000],
                        //    [5, 10, 15, 20, 1000] // change per page values here
                        //],
                        // set the initial value

                        "dom": "<'row' <'col-md-12'B>><'row'<'col-md-6 col-sm-12'l><'col-md-6 col-sm-12'f>r><'table-scrollable't><'row'<'col-md-5 col-sm-12'i><'col-md-7 col-sm-12'p>>", // horizobtal scrollable datatable

                        // Uncomment below line("dom" parameter) to fix the dropdown overflow issue in the datatable cells. The default datatable layout
                        // setup uses scrollable div(table-scrollable) with overflow:auto to enable vertical scroll(see: assets/global/plugins/datatables/plugins/bootstrap/dataTables.bootstrap.js).
                        // So when dropdowns used the scrollable div should be removed.
                        //"dom": "<'row' <'col-md-12'T>><'row'<'col-md-6 col-sm-12'l><'col-md-6 col-sm-12'f>r>t<'row'<'col-md-5 col-sm-12'i><'col-md-7 col-sm-12'p>>",
                });
            }

            return {
                //main function to initiate the module
                init: function () {
                    if ($.fn.DataTable.isDataTable("#OrderProductTable")) {
                        $('#OrderProductTable').dataTable().fnDestroy();
                        $('#divOrderProductTable').html('<table class="table table-striped" width="100%" id="OrderProductTable"></table>');
                    }
                    initTable1();
                }
            };
        }();

    function Cancelorder(O_Id) {

            $.ajax({
                type: "POST",
                url: '@Url.Action(Actions.MasterOrderStatus_Update, Controllers.Order)',
                data: { orderid: O_Id},
                dataType: 'json',
                success: function (response) {
                    if (response.Code == 200) {
                        swal("Success !", 'Order canceled successfully', "success");
                        viewOrder();
                    }
                    else {
                        swal("Error !", response.Message, "error");
                    }
                },
                error: function (error) {
                    swal("Error !", "Something Went Wrong", "error");
                }
            });
        }




        function ViewUser(Users_Id) {

            $.ajax({
                type: "POST",
                url: '@Url.Action(Actions.Users_ById, Controllers.Myaccount)',
                data: { Users_Id: Users_Id },
                dataType: 'json',
                success: function (response) {

                    $('#Users_Id').val(response.Item.Users_Id);
                    $('#FirstName').val(response.Item.FirstName);
                    $('#LastName').val(response.Item.LastName);
                    $('#ContactNo').val(response.Item.ContactNo);
                    $('#Email').val(response.Item.Email);
                    $("#StateId").val(response.Item.StateId);
                    $("#CityId").val(response.Item.CityId);
                    $("#Address1").val(response.Item.Address);
                    $("#Address2").val(response.Item.Addressline2);
                    $("#PinCode").val(response.Item.Pincode);
                    document.getElementById("ImageView").src = response.Item.ImageUrlStr;

                },
                error: function (error) {
                swal("Error !", "Something Went Wrong", "error");
                }
            });
        }


        $(document).ready(() => {
            $("#viewuserdetail").validate({
                rules: {

                    Email: {
                        required: true,
                    },
                    ContactNo: {
                        required: true,
                        minlength: 10,
                        maxlength: 10
                    },
                    LastName: {
                        required: true,
                    },
                    FirstName: {
                        required: true,
                    },
                    ProfileImg: {
                        required: true,
                    },

                },
                messages: {
                    Email: {
                        required: "Email is required",
                    },
                    ContactNo: {
                        required: " Contact No is required",
                    },
                    LastName: {
                        required: "LastName is required",
                    },
                    FirstName: {
                        required: "FirstName is required",
                    },
                    ProfileImg: {
                        required: "Profile image is required",
                    },
                },

                errorPlacement: function (error, element) {
                    if (element.is(":radio")) {
                        error.appendTo(element.parents(".form-group"));
                    } else {
                        // This is the default behavior
                        error.insertAfter(element);
                    }
                },
                submitHandler: function (form) {
                    AddUser();
                }
            });

        });



        function AddUser() {

            var formData = new FormData();

            var file = document.getElementById("ProfileImg").files[0];
            formData.append("files", file);
            // formData.append("Users_Id", 0);
            formData.append("Users_Id", @ProjectSession.Users_Id);
            formData.append("LastName", $("#LastName").val());
            formData.append("FirstName", $("#FirstName").val());
            formData.append("ContactNo", $("#ContactNo").val());
            formData.append("Email", $("#Email").val());
            formData.append("Address", $("#Address1").val());
            formData.append("Addressline2", $("#Address2").val());
            formData.append("Pincode", $("#PinCode").val());
            formData.append("CityId", $("#CityId").val());
            formData.append("StateId", $("#StateId").val());

            $.ajax({

                type: "POST",
                url: '@Url.Action(Actions.Users_Upsert, Controllers.Myaccount)',
                data: formData,
                contentType: false,
                processData: false,
                success: function (response) {
                    if (response.Code == 200) {
                        swal({
                            title: "",
                            text: "Details updated succesfully",
                            icon: "success",
                            timer: 2000
                        });
                    }
                    else {
                        swal({
                            title: "",
                            text: response.Message,
                            icon: "warning",
                            timer: 2000
                        });
                        $("#btnLogin").show();
                    }
                },
                error: function (error) {
                    $("#btnLogin").show();
                    swal("Error!", error.Message, "error");
                }
            });
        }

</script>
</body>
