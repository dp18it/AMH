@using AMH.Common;
@using AMHAdmin.Pages;
@using System.Web.Optimization;
@using AMHAdmin.Infrastructure;

@Html.AntiForgeryToken()

@{
    ViewBag.Title = "Product";
}

<link rel="stylesheet" href="https://pro.fontawesome.com/releases/v5.10.0/css/all.css" integrity="sha384-AYmEC3Yw5cVb3ZcuHtOA93w35dYTsvhLPVnYs9eStHfGJvOvKxVfELGroGkvsg+p" crossorigin="anonymous" />

<style>
    .checkbox2 {
        width: 25px;
        height: 25px;
    }

    thead {
        background: #0069D9;
        color: white;
    }

    .row {
        margin: 0 !important;
    }

    .activ {
        background: linear-gradient(to right, #0069D9, #0069D9);
        color: white;
    }

    .has-error .checkbox, .has-error .checkbox-inline, .has-error .control-label, .has-error .form-control-feedback, .has-error .help-block, .has-error .radio, .has-error .radio-inline, .has-error.checkbox label, .has-error.checkbox-inline label, .has-error.radio label, .has-error.radio-inline label {
        color: #e73d4a
    }

    .has-error .form-control {
        bUsers-color: #e73d4a;
        -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.075);
        box-shadow: inset 0 1px 1px rgba(0,0,0,.075)
    }

        .has-error .form-control:focus {
            bUsers-color: #d71b29;
            -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.075),0 0 6px #f2989f;
            box-shadow: inset 0 1px 1px rgba(0,0,0,.075),0 0 6px #f2989f
        }

    .has-error .input-group-addon {
        color: #e73d4a;
        bUsers-color: #e73d4a;
        background-color: #fbe1e3
    }

    .autocomplete-items {
        position: absolute;
        bUsers: 1px solid #d4d4d4;
        bUsers-bottom: none;
        z-index: 99;
        top: 40px;
        left: 0;
        right: 0;
        box-shadow: 0 39px 70px 0 rgba(0, 0, 0, 0.1);
        background-color: #ffffff;
    }

        .autocomplete-items > div {
            padding: 10px;
            cursor: pointer;
            bUsers-bottom: 1px solid #ccc;
        }

            .autocomplete-items > div:hover {
                background: #fbfbfb;
            }

    .addDelete {
        color: black !important;
        background: #e9e9e9 !important;
    }

    .hideDelete {
        display: none !important;
    }

    .text-c-dark {
        color: #000;
    }

    .device-active .active .card {
        background: #157aec;
        cursor: pointer;
    }

    .device-active .active .text-c-dark {
        color: #fff !important;
    }

        .device-active .active .text-c-dark .icon {
            background-color: #0069D9;
            bUsers: none;
        }

    .icon-box {
        background: #eff1f4;
    }

        .icon-box:hover {
            background: #0e67cc !important;
        }

    .btn-primary {
        color: #fff !important;
        background-color: #0596F8 !important;
        border-color: #0596F8 !important;
        box-shadow: inset 0 1px 0 rgb(255 255 255 / 15%), 0 1px 1px rgb(0 0 0 / 8%) !important;
    }

    div.dt-buttons {
        float: right !important;
    }
</style>


<div class="content container-fluid">
    <div class="row">
        <div class="col-8">
            <h5>Product</h5>
        </div>
    </div>
    <div class="row">
        <div class="col-xxl-12 col-lg-12 col-md-12 col-12 mb-3">
            @Html.AntiForgeryToken()
            <div class="portlet-body table-responsive" id="divProductTable">
                <table class="table table-striped table-bUsersed table-hover" id="ProductTable"></table>
            </div>
        </div>
    </div>
</div>

<div class="modal" id="addProduct" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h6 class="title" id="defaultModalLabel">Add Product</h6>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form id="ManageProductForm" method="post" enctype="multipart/form-data">
                <div class="modal-body">
                    <div class="row">
                        <div class="col-12 mt-2">
                            <label>Product Name</label>
                            <input type="hidden" id="Product_Id" name="Product_Id" />
                            <input type="text" id="Name" name="Name" class="form-control" placeholder="Enter here..." />
                        </div>
                        <div class="col-sm-6">
                            <label for="Photo">Product Main Image</label>
                            <div class="form-group">
                                <input type="file" onchange="readURL(this)" class="form-control-file mt-2" id="ProductImg" name="ProductImg" accept="png jpg jpeg">
                                <img id="ImageView" style="width: 30% !important" height="70px" class="form-control-file" />
                            </div>
                        </div>
                        <div class="col-sm-6" id="d1">
                            <label for="Photo">Product Extra Image 1</label>
                            <div class="form-group">
                                <input type="file" onchange="readURL1(this)" class="form-control-file mt-2" id="ExtraImage1" name="ExtraImage1" accept="png jpg jpeg" >
                                <img id="ImageView1" style="width: 30% !important" height="70px" class="form-control-file" />
                            </div>
                        </div>
                        <div class="col-sm-6" id="d2">
                            <label for="Photo">Product Extra Image 2</label>
                            <div class="form-group">
                                <input type="file" onchange="readURL2(this)" class="form-control-file mt-2" id="ExtraImage2" name="ExtraImage2" accept="png jpg jpeg" >
                                <img id="ImageView2" style="width: 30% !important" height="70px" class="form-control-file" />
                            </div>
                        </div>
                        <div class="col-sm-6" id="d3">
                            <label for="Photo">Product Extra Image 3</label>
                            <div class="form-group">
                                <input type="file" onchange="readURL3(this)" class="form-control-file mt-2" id="ExtraImage3" name="ExtraImage3" accept="png jpg jpeg">
                                <img id="ImageView3" style="width: 30% !important" height="70px" class="form-control-file" />
                            </div>
                        </div>
                        <div class="col-12 mt-2">
                            <label>SubCategory</label>
                            @Html.Raw(Html.DropDownList("SubCategoryId", (IEnumerable<SelectListItem>)ViewBag.SubCategoryDrp, new { @Id = "SubCategoryId", @class = "form-control" }))
                        </div>
                        <div class="col-6 mt-2">
                            <label>Price</label>
                            <input type="text" id="Price" name="Price" class="form-control" placeholder="Enter here..." />
                        </div>
                        <div class="col-6 mt-2">
                            <label>Quantity</label>
                            <input type="text" id="Quantity" name="Quantity" class="form-control" placeholder="Enter here..." />
                        </div>
                        <div class="col-12 mt-2">
                            <label>Description</label>
                            <textarea id="Description" name="Description" class="form-control" placeholder="Enter here..."></textarea>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="btnSearch" type="submit" class="btn btn-primary saveBtn">Save</button>
                    <button id="loadingsave" class="btn btn-primary loading" type="button" disabled style="display:none;float:right;">
                        <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                        Saving...
                    </button>
                    <button type="button" data-dismiss="modal" class="btn btn-secondary closeBtn">Close</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function readURL(input) {
            validateFileType(0);
            $('#ImageView').show();
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#ImageView').attr('src', e.target.result);
                };
                reader.readAsDataURL(input.files[0]);

                if ($('#ProductImg').hasClass('error')) {
                    $('#ProductImg').addClass('valid');
                    $('#ProductImg').removeClass('error');
                }
                $('#ProductImg-error').attr("style", "display:none");
            }
        }
        function readURL1(input) {
            validateFileType(1);
            $('#ImageView1').show();
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#ImageView1').attr('src', e.target.result);
                };
                reader.readAsDataURL(input.files[0]);

                if ($('#ExtraImage1').hasClass('error')) {
                    $('#ExtraImage1').addClass('valid');
                    $('#ExtraImage1').removeClass('error');
                }
                $('#ExtraImage1-error').attr("style", "display:none");
            }
        }
        function readURL2(input) {
            validateFileType(2);
            $('#ImageView2').show();
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#ImageView2').attr('src', e.target.result);
                };
                reader.readAsDataURL(input.files[0]);

                if ($('#ExtraImage2').hasClass('error')) {
                    $('#ExtraImage2').addClass('valid');
                    $('#ExtraImage2').removeClass('error');
                }
                $('#ExtraImage2-error').attr("style", "display:none");
            }
        }
        function readURL3(input) {
            validateFileType(3);
            $('#ImageView3').show();
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#ImageView3').attr('src', e.target.result);
                };
                reader.readAsDataURL(input.files[0]);

                if ($('#ExtraImage3').hasClass('error')) {
                    $('#ExtraImage3').addClass('valid');
                    $('#ExtraImage3').removeClass('error');
                }
                $('#ExtraImage3-error').attr("style", "display:none");
            }
        }
        var proId = 0;

        function validateFileType(img) {
            if (img == 1) {
                var fileName = document.getElementById("ExtraImage1").value;
            }
            else if (img == 2) {
                var fileName = document.getElementById("ExtraImage2").value;
            }
            else if (img == 3) {
                var fileName = document.getElementById("ExtraImage3").value;
            }
            else {
                var fileName = document.getElementById("ProductImg").value;
            }
           
            var idxDot = fileName.lastIndexOf(".") + 1;
            var extFile = fileName.substr(idxDot, fileName.length).toLowerCase();
            if (extFile == "jpg" || extFile == "jpeg" || extFile == "png") {
            }
            else if (img == 1) {
                $('#ExtraImage1').val('');
                alert("Only jpg/jpeg and png files are allowed!");
            }
            else if (img == 2) {
                $('#ExtraImage2').val('');
                alert("Only jpg/jpeg and png files are allowed!");
            }
            else if (img == 3) {
                $('#ExtraImage3').val('');
                alert("Only jpg/jpeg and png files are allowed!");
            }
            else {
                $('#ProductImg').val('');
                alert("Only jpg/jpeg and png files are allowed!");
            }
        }

        $(document).ready(() => {
            $("#SubCategoryId").append('<option value="0" disabled selected hidden>Select SubCategory</option>');
            CategoriesDataTable.init();

            $("#ManageProductForm").validate({
                rules: {
                    Name: "required",
                    SubCategoryId: "required",
                    ProductImg: {
                        required: function (element) {
                            if (parseInt(proId) > 0) {
                                return false;
                            } else {
                                return true;
                            }
                        },
                        //extension: "png|jpe?g",
                    },
                    ExtraImage1: {
                        required: function (element) {
                            if (parseInt(proId) > 0) {
                                return false;
                            } else {
                                return true;
                            }
                        },
                        //extension: "png|jpe?g",
                    },
                    ExtraImage2: {
                        required: function (element) {
                            if (parseInt(proId) > 0) {
                                return false;
                            } else {
                                return true;
                            }
                        },
                        //extension: "png|jpe?g",
                    },
                    ExtraImage3: {
                        required: function (element) {
                            if (parseInt(proId) > 0) {
                                return false;
                            } else {
                                return true;
                            }
                        },
                        //extension: "png|jpe?g",
                    },
                    Description: "required",
                    Quantity: {
                        required: true,
                        number: true,
                    },
                    Price: {
                        required: true,
                        number: true,
                    }
                },
                messages: {
                    Name: {
                        required: "Product name is required",
                    },
                    SubCategoryId: {
                        required: "SubCategory name is required",
                    },
                    ProductImg: {
                        required: "Image  is required",
                    },
                    ExtraImage1: {
                        required: "Extra Image 1  is required",
                    },
                    ExtraImage2: {
                        required: "Extra Image 2  is required",
                    },
                    ExtraImage3: {
                        required: "Extra Image 3  is required",
                    },
                    Quantity: {
                        required: "Quantity is required",
                    },
                    Price: {
                        required: "Price is required",
                    },
                    Description: {
                        required: "Description is required",
                    },

                },

                errorPlacement: function (error, element) {
                    if (element.is(":radio")) {
                        error.appendTo(element.parents(".form-group"));
                    } else {
                        // This is the default behavior
                        error.insertAfter(element);
                    }
                },
                submitHandler: function (form) {
                    AddProduct();
                }
            });


        });


        var CategoriesDataTable = function () {
            let initTable1 = function () {
                let table = $('#ProductTable');

                let oTable = table.dataTable({
                    "stateSave": true,
                    "autoWidth": false,
                    "paging": true,
                    // Internationalisation. For more info refer to http://datatables.net/manual/i18n
                    "language": {
                        "aria": {
                            "sortAscending": ": activate to sort column ascending",
                            "sortDescending": ": activate to sort column descending"
                        },
                        "emptyTable": "No data available in table",
                        "info": "Showing _START_ to _END_ of _TOTAL_ entries",
                        "infoEmpty": "No entries found",
                        "infoFiltered": "(filtered1 from MAX total entries)",
                        //"lengthMenu": "MENU entries",
                        "search": "Search:",
                        "zeroRecords": "No matching records found"
                    },
                    "pageLength": 10,
                    "processing": true,
                    "serverSide": true,
                    "ajax": {
                        async: true,
                        url: '@Url.Action(Actions.Product_All, Controllers.Product)',
                        type: "post",
                        data: SearchCriteria(),
                    },
                    "columns": [
                        {
                            "title": "Image", "data": "Image",
                            "render": function (data, type, row) {
                                let htmlData = "";
                                htmlData = `<img title="Photo" class="image-circle" onclick="redirectToNewTab('` + row["ImageUrlStr"] + `')" src="${row["ImageUrlStr"]}" height="50px">`;

                                return htmlData;
                            }
                            , "orderable": false, "width": "3%"
                        },
                        {
                            "title": "Product Name", "data": "Name",
                            "render": function (data, type, row) {
                                let htmlData = "";

                                htmlData = `<p class="mb-0">${row["Name"]}</p>`;

                                return htmlData;
                            }
                            , "orderable": false, "width": "3%"
                        },
                        {
                            "title": "Description", "data": "Description",
                            "render": function (data, type, row) {
                                let htmlData = "";

                                htmlData = `<p class="mb-0">${row["Description"]}</p>`;

                                return htmlData;
                            }
                            , "orderable": false, "width": "3%"
                        },
                        {
                            "title": "Price", "data": "Price",
                            "render": function (data, type, row) {
                                let htmlData = "";

                                htmlData = `<p class="mb-0">${row["Price"]}</p>`;

                                return htmlData;
                            }
                            , "orderable": false, "width": "3%"
                        },
                        {
                            "title": "Quantity", "data": "Quantity",
                            "render": function (data, type, row) {
                                let htmlData = "";

                                htmlData = `<p class="mb-0">${row["Quantity"]}</p>`;

                                return htmlData;
                            }
                            , "orderable": false, "width": "3%"
                        },
                         {
                             "title": "SubCategory Name", "data": "SubCategoryname",
                            "render": function (data, type, row) {
                                let htmlData = "";

                                htmlData = `<p class="mb-0">${row["SubCategoryname"]}</p>`;

                                return htmlData;
                            }
                            , "orderable": false, "width": "3%"
                        },
                          {
                             "title": "Category Name", "data": "Categoryname",
                            "render": function (data, type, row) {
                                let htmlData = "";

                                htmlData = `<p class="mb-0">${row["Categoryname"]}</p>`;

                                return htmlData;
                            }
                            , "orderable": false, "width": "3%"
                        },

                        {
                            "title": "Is Active ?", "data": "IsActive",
                            "render": function (data, type, row) {
                                let htmlData = "";

                                if (row["IsActive"] == 1) {
                                    htmlData = `<button title="Active" onclick="InActiveMessage('${row["Product_Id"]}');" class="badge badge-primary">Active</button>`;
                                } else {
                                    htmlData = `<button title="In-Active" onclick="ActiveMessage('${row["Product_Id"]}');" class="badge badge-danger">In-Active</button>`;
                                }

                                return htmlData;
                            }
                            , "orderable": false, "width": "3%"
                        },
                        {
                            "title": "Action", "data": "Product_Id",
                            "render": function (data, type, row) {
                                let htmlData = "";
                                htmlData += `<button class="btn btn-sm btn-outline-secondary mr-2" title="Edit Product" onclick="ViewProduct('${(row["Product_Id"])}');"><i class="fa fa-edit"></i></button>`;
                                htmlData += `<button class="btn btn-sm btn-outline-secondary mr-2" title="Delete Product" onclick="DeleteProduct('${(row["Product_Id"])}');"><i class="fa fa-trash"></i></button>`;
                                //htmlData += `<button class="btn btn-sm btn-outline-secondary mr-2" title="Delete Customer" onclick="DeleteDocument('${btoa(row["Id"])}');"><i class="fa fa-trash"></i></button>`;

                                return htmlData;
                            }
                            , "orderable": false, "width": "3%"
                        },
                    ],
                    // setup buttons extentension: http://datatables.net/extensions/buttons/
                        "buttons": [
                            {
                                text: 'Add Product',
                                className: 'btn btn-primary mb-3 mt-1 mr-2',
                                action: function (e, dt, node, config) {
                                    AddProductPopUp();
                                }
                            }
                            //{
                            //    text: 'Filters',
                            //    className: 'btn btn-primary mb-3 mt-1',
                            //    action: function (e, dt, node, config) {
                            //        UserDataFillter();
                            //    }
                            //},
                            //{
                            //    text: 'Reset',
                            //    className: ' mb-3 mt-1 mr-3',
                            //    action: function () {
                            //        SearchReset(true)
                            //    }
                            //}
                        ],

                        // setup responsive extension: http://datatables.net/extensions/responsive/
                        responsive: true,

                        "lengthMenu": [
                            [5, 10, 15, 20, 1000],
                            [5, 10, 15, 20, 1000] // change per page values here
                        ],
                        // set the initial value

                        "dom": "<'row' <'col-md-12'B>><'row'<'col-md-6 col-sm-12'l><'col-md-6 col-sm-12'f>r><'table-scrollable't><'row'<'col-md-5 col-sm-12'i><'col-md-7 col-sm-12'p>>", // horizobtal scrollable datatable

                        // Uncomment below line("dom" parameter) to fix the dropdown overflow issue in the datatable cells. The default datatable layout
                        // setup uses scrollable div(table-scrollable) with overflow:auto to enable vertical scroll(see: assets/global/plugins/datatables/plugins/bootstrap/dataTables.bootstrap.js).
                        // So when dropdowns used the scrollable div should be removed.
                        //"dom": "<'row' <'col-md-12'T>><'row'<'col-md-6 col-sm-12'l><'col-md-6 col-sm-12'f>r>t<'row'<'col-md-5 col-sm-12'i><'col-md-7 col-sm-12'p>>",
                });
            }

            return {
                //main function to initiate the module
                init: function () {
                    if ($.fn.DataTable.isDataTable("#ProductTable")) {
                        $('#ProductTable').dataTable().fnDestroy();
                        $('#divProductTable').html('<table class="table table-striped" width="100%" id="ProductTable"></table>');
                    }
                    initTable1();
                }
            };
        }();

        //Data fillter function
        function SearchCriteria() {
            try {
                var param = {};
                //param["Name"] = $("#admin_name").val(),
                //param["Email"] = $("#admin_email").val(),
                //param["MobileNumber"] = $("#admin_mobilenumber").val(),
                //param["AdminTypeId"] = $("#admin_typeid").val(),
                //param["IsActive"] = $("#admin_isactive").val()
                return addRequestVerificationToken(param);
            } catch (e) { }
        }

        //function UserDataFillter() {
        //    $('#UsersFillter').modal('show');
        //}

        //function SearchReset(isReset) {

        //    $(".saveBtn").hide();
        //    $(".loading").show();
        //    $(".closeBtn").hide();

        //    if (isReset == true) {
        //        $('#admin_name').val("");
        //        $('#admin_email').val("");
        //        $('#admin_mobilenumber').val("");
        //        $('#admin_typeid').val("");
        //        $('#admin_isactive').val(2);
        //    }

        //    CategoriesDataTable.init();
        //    $('#UsersFillter').modal('hide');
        //    $(".saveBtn").show();
        //    $(".loading").hide();
        //    $(".closeBtn").show();
        //}

        function addRequestVerificationToken(data) {
            data.__RequestVerificationToken = $('input[name=__RequestVerificationToken]').val();
            return data;
        }

        function InActiveMessage(Product_Id) {
            swal({
                title: "Are you sure ?",
                text: "You will be in-activating the Product !",
                icon: "warning",
                buttons: true,
                dangerMode: true,
            })
            .then((willupdate) => {
                if (willupdate) {
                    UpdateStatus(Product_Id);
                }
            });
        }

        //ActiveMessage swal function
        function ActiveMessage(Product_Id) {
            swal({
                title: "Are you sure ?",
                text: "You will be activating the Product !",
                icon: "warning",
                buttons: true,
                dangerMode: true,
            })
            .then((willupdate) => {
                if (willupdate) {
                    UpdateStatus(Product_Id);
                }
            });
        }

        //status ActiveInActive change function
        function UpdateStatus(Product_Id) {
            $.ajax({
                type: "POST",
                url: '@Url.Action(Actions.Product_ActInact, Controllers.Product)',
                data: { Product_Id: Product_Id },
                dataType: 'json',
                success: function (response) {
                    CategoriesDataTable.init();
                    if (response.Code == 200) {
                        swal({
                            title: "Success",
                            text: response.Message,
                            icon: "success",
                            timer: 2000
                        })
                    } else {
                        swal({
                            title: "Warning",
                            text: response.Message,
                            icon: "warning"
                        })
                    }
                },
                error: function (error) {
                    swal({
                        title: "Warning",
                        text: response.Message,
                        icon: "warning"
                    })
                }
            });
        }


        function AddProductPopUp() {
            $('#Product_Id').val(0);
            $('#SubCategoryId').val(0);
            $('#Name').val('');
            $('#Description').val('');
            $('#ProductImg').val('');
            $('#ExtraImage1').val('');
            $('#ExtraImage2').val('');
            $('#ExtraImage3').val('');
            $('#Price').val('');
            $('#Quantity').val('');
            $('#ImageView').hide();
            $('#ImageView1').hide();
            $('#ImageView2').hide();
            $('#ImageView3').hide();
            var $alertas = $('#addProduct');
            $alertas.validate().resetForm();
            $alertas.find('.error').removeClass('error');
            $('#defaultModalLabel').text('Add Product');
            $('#addProduct').modal('show');
            proId = 0;
        }

        function AddProduct() {

            //$(".saveBtn").hide();
            //$(".loading").show();
            //$(".closeBtn").hide();

            var formData = new FormData();

            var file = document.getElementById("ProductImg").files[0];
            var file1 = document.getElementById("ExtraImage1").files[0];
            var file2 = document.getElementById("ExtraImage2").files[0];
            var file3 = document.getElementById("ExtraImage3").files[0];
            formData.append("files", file);
            formData.append("files1", file1);
            formData.append("files2", file2);
            formData.append("files3", file3);
            formData.append("Product_Id", $("#Product_Id").val());
            formData.append("Name", $("#Name").val());
            formData.append("Subcat_Id", $("#SubCategoryId").val());
            formData.append("Price", $("#Price").val());
            formData.append("Quantity", $("#Quantity").val());
            formData.append("Description", $("#Description").val());

            $.ajax({

                type: "POST",
                url: '@Url.Action(Actions.Product_Upsert, Controllers.Product)',
                data: formData,
                contentType: false,
                processData: false,
                success: function (response) {
                    if (response.Code == 200) {
                        $('#addProduct').modal('hide');
                        swal({
                            title: "Great !",
                            text: response.Message,
                            icon: "success",
                            timer: 2000
                        })
                        CategoriesDataTable.init();

                    }
                    else {
                        swal("Error !", response.Message , "error");
                    }
                    $(".saveBtn").show();
                    $(".loading").hide();
                    $(".closeBtn").show();
                    $('#addProduct').modal('hide');

                },
                error: function (error) {
                    swal("Error!", error.Message, "error");
                    $(".saveBtn").show();
                    $(".loading").hide();
                    $(".closeBtn").show();
                }
            });
        }


        //function emptyFormValues() {
        //    $("#Product_Id").val(0);
        //    $("#Name").val("");
        //    $("#Description").val("");

        //}
        function ViewProduct(Product_Id) {

            var $alertas = $('#addProduct');
            $alertas.validate().resetForm();
            $alertas.find('.error').removeClass('error');
            proId = Product_Id;
            $.ajax({
                type: "POST",
                url: '@Url.Action(Actions.Product_ById, Controllers.Product)',
                data: { Product_Id: Product_Id },
                dataType: 'json',
                success: function (response) {
                    if (response.Code == 200) {
                        $('#ImageView').show();
                        if (response.Item.ExtraImage1 != null && response.Item.ExtraImage1 != '') {
                            $('#ImageView1').show();
                        }
                        if (response.Item.ExtraImage2 != null && response.Item.ExtraImage2 != '') {
                            $('#ImageView2').show();
                        }
                        if (response.Item.ExtraImage3 != null && response.Item.ExtraImage3 != '') {
                            $('#ImageView3').show();
                        }
                        $('#Product_Id').val(response.Item.Product_Id);
                        $('#Name').val(response.Item.Name);
                        $('#Description').val(response.Item.Description);
                        $('#SubCategoryId').val(response.Item.Subcat_Id);
                        $('#Price').val(response.Item.Price);
                        $('#Quantity').val(response.Item.Quantity);
                        document.getElementById("ImageView").src = response.Item.ImageUrlStr;
                        document.getElementById("ImageView1").src = response.Item.ExtraImage1UrlStr;
                        document.getElementById("ImageView2").src = response.Item.ExtraImage2UrlStr;
                        document.getElementById("ImageView3").src = response.Item.ExtraImage3UrlStr;
                        $('#defaultModalLabel').text('Edit Product');
                        $('#addProduct').modal('show');

                    }
                    else {
                        swal("Error !", response.Message, "error");
                    }
                },
                error: function (error) {
                    swal("Error !", "Something Went Wrong", "error");
                }
            });
        }


        function DeleteProduct(Product_Id) {
            swal({
                title: "Delete !",
                text: "Are You Sure You want to Delete this Data ?",
                icon: "warning",
                buttons: true,
                dangerMode: true,
            })
            .then((willdelete) => {
                if (willdelete) {
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action(Actions.Product_Delete, Controllers.Product)',
                        data: { Product_Id: Product_Id },
                        dataType: 'json',
                        success: function (response) {
                            swal("Success !", response.Message, "success");
                            CategoriesDataTable.init();
                        },
                        error: function (error) {
                            console.log('error', error);
                        }
                    })
                }
            });
        }
    </script>
}
