@using AMH.Common;
@using AMHAdmin.Pages;
@using System.Web.Optimization;
@using AMHAdmin.Infrastructure;

@Html.AntiForgeryToken()

@{
    ViewBag.Title = "UsersListing";
    //Layout = "~/Views/Shared/_Layout.cshtml";
}


<link rel="stylesheet" href="https://pro.fontawesome.com/releases/v5.10.0/css/all.css" integrity="sha384-AYmEC3Yw5cVb3ZcuHtOA93w35dYTsvhLPVnYs9eStHfGJvOvKxVfELGroGkvsg+p" crossorigin="anonymous" />

<div class="content container-fluid">
    <div class="row">
        <div class="col-8 mb-4">
            <h5> User Listing</h5>
        </div>
    </div>
    <div class="row">
        <div class="col-xxl-12 col-lg-12 col-md-12 col-12 mb-3">
            @Html.AntiForgeryToken()
            <div class="portlet-body table-responsive" id="divUsersTable">
                <table class="table table-striped table-bUsersed table-hover" id="UsersTable"></table>
            </div>
        </div>
    </div>
</div>

<div class="modal" id="advFilter" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h6 class="title" id="defaultModalLabel">User Filters</h6>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row clearfix">
                    <div class="col-sm-6">
                        <label>Start Date</label>
                        <div class="form-group">
                            <input type="date" class="form-control" name="FromDate" id="FromDate" />
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <label>End Date</label>
                        <div class="form-group">
                            <input type="date" class="form-control" name="ToDate " id="ToDate" />
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button id="btnSearch" type="button" class="btn btn-primary saveBtn" onclick="SearchReset(false)">Search</button>
                <button class="btn btn-primary loading" type="button" disabled style="display:none;float:right;">
                    <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                    Searching...
                </button>
                <button type="button" data-dismiss="modal" class="btn btn-secondary closeBtn">Cancel</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
       // var compIds = 0;

        $(document).ready(() => {

            UsersDataTable.init();
            $("#UsersTable_filter").hide();
            });

        var UsersDataTable = function () {
            let initTable1 = function () {
                let table = $('#UsersTable');
                let oTable = table.dataTable({
                    "stateSave": true,
                    "autoWidth": false,
                    "paging": true,
                    // Internationalisation. For more info refer to http://datatables.net/manual/i18n
                    "language": {
                        "aria": {
                            "sortAscending": ": activate to sort column ascending",
                            "sortDescending": ": activate to sort column descending"
                        },
                        "emptyTable": "No data available in table",
                        "info": "Showing _START_ to _END_ of _TOTAL_ entries",
                        "infoEmpty": "No entries found",
                        "infoFiltered": "(filtered1 from MAX total entries)",
                        //"lengthMenu": "MENU entries",
                        "search": "Search:",
                        "zeroRecords": "No matching records found"
                    },
                    "pageLength": 10,
                    "processing": true,
                    "serverSide": true,
                    "ajax": {
                        async: true,
                        url: '@Url.Action(Actions.Users_All, Controllers.Users)',
                        type: "post",
                        data: SearchCriteria(),
                    },
                    "columns": [
                                {
                            "title": "User Name", "data": "FirstName",
                            "render": function (data, type, row) {
                                let htmlData = "";
                                //htmlData += `<p class="mb-0">${row["FirstName"] == "" || row["FirstName"] == null ? '-' : row["FirstName"]}</p >`;
                                htmlData += `<p class="mb-0">${row["FirstName"] + " " + row["LastName"]}</p>`;
                                return htmlData;
                            }
                            , "orderable": false, "width": "3%"
                        },
                        {
                            "title": "Gender", "data": "Gender",
                            "render": function (data, type, row) {
                                let htmlData = "";

                                htmlData = `<p class="mb-0">${row["Gender"]}</p>`;

                                return htmlData;
                            }
                            , "orderable": false, "width": "3%"
                        },
                        //{
                        //    "title": "Date", "data": "ConsultDateStr",
                        //    "render": function (data, type, row) {
                        //        let htmlData = "";
                        //        htmlData += `<p class="mb-0">${row["ConsultDateStr"] == "" || row["ConsultDateStr"] == null ? '-' : row["ConsultDateStr"]}</p >`;
                        //        return htmlData;
                        //    }
                        //    , "orderable": false, "width": "3%"
                        //},
                        //{
                        //    "title": "Reason", "data": "LookUpReasonTypeName",
                        //    "render": function (data, type, row) {

                        //        let htmlData = "";
                        //        htmlData += `<p class="mb-0">${row["LookUpReasonTypeName"] == "" || row["LookUpReasonTypeName"] == null ? '-' : row["LookUpReasonTypeName"]}</p >`;
                        //        return htmlData;
                        //    }
                        //    , "orderable": false, "width": "3%"
                        //},
                        //{
                        //    "title": "Purpose", "data": "LookUpPurposeTypeName",
                        //    "render": function (data, type, row) {

                        //        let htmlData = "";
                        //        htmlData += `<p class="mb-0">${row["LookUpPurposeTypeName"] == "" || row["LookUpPurposeTypeName"] == null ? '-' : row["LookUpPurposeTypeName"]}</p >`;
                        //        return htmlData;
                        //    }
                        //    , "orderable": false, "width": "3%"
                        //},

                    ],
                    // setup buttons extentension: http://datatables.net/extensions/buttons/

                    "buttons": [
                        //{ extend: 'csv', className: 'btn green btn-outline mb-3 mt-1', exportOptions: { columns: [0, 1, 2, 3] } },
                        { extend: 'excel', className: 'btn green btn-outline mb-3 mt-1', exportOptions: { columns: [0, 1, 2] } },
                        { extend: 'pdf', className: 'btn green btn-outline mb-3 mt-1', exportOptions: { columns: [0, 1, 2] } },
                        { extend: 'print', className: 'btn green btn-outline mb-3 mt-1', exportOptions: { columns: [0, 1, 2] } },

                        {
                            text: 'Filters',
                            className: 'btn btn-success mb-3 mt-1',
                            action: function (e, dt, node, config) {
                                advFilter();
                            }
                        },
                        {
                            text: 'Reset',
                            className: 'btn btn-success mb-3 mt-1',
                            action: function (e, dt, node, config) {
                                SearchReset(true);
                                $("#UsersTable_filter").hide();

                            }
                        },

                    ],
                        // setup responsive extension: http://datatables.net/extensions/responsive/
                        responsive: true,

                        "lengthMenu": [
                            [5, 10, 15, 20, 1000],
                            [5, 10, 15, 20, 1000] // change per page values here
                        ],
                        // set the initial value

                        "dom": "<'row' <'col-md-12'B>><'row'<'col-md-6 col-sm-12'l><'col-md-6 col-sm-12'f>r><'table-scrollable't><'row'<'col-md-5 col-sm-12'i><'col-md-7 col-sm-12'p>>",
                });
            }

            return {
                //main function to initiate the module
                init: function () {
                    if ($.fn.DataTable.isDataTable("#UsersTable")) {
                        $('#UsersTable').dataTable().fnDestroy();
                        $('#divUsersTable').html('<table class="table table-striped" width="100%" id="UsersTable"></table>');
                    }
                    initTable1();
                }
            };
        }();

        function SearchCriteria() {
            try {
                var param = {};
                param["FromDate"] = $("#FromDate").val();
                param["ToDate"] = $("#ToDate").val();
                return addRequestVerificationToken(param);
            } catch (e) { }
        }
        function advFilter() {
            $('#advFilter').modal('show');
        }
        const SearchReset = (isReset = false) => {

            if (isReset == true) {
                $('#FromDate').val('');
                $('#ToDate').val('');
            }
            UsersDataTable.init();
            $('#advFilter').modal('hide');
            $("#UsersTable_filter").hide();
        }

        function advFilter() {
            $('#advFilter').modal('show');
        }

        //function closeModal() {
        //    $('#Users_Id').html("");
        //    $('#Id').val(0);
        //    $('#PlayersId').val(0);
        //    $('#Note').val('');
        //    $('#ConsultDate').val('');
        //    $('#LookUpConsultTypeId').val(0);
        //    $('#LookUpPurposeId').val(0);
        //    $('#LookUpReasonId').val(0);
        //    $('#IsPrivate').val(0);

        //    $('#UserIds').val(0);
        //    $('#LookUpNotificationTypeId1').val(0);
        //    $('#Description1').val('');

        //    $('#addPlayersConsults').modal('hide');

        //}

        function addRequestVerificationToken(data) {
            data.__RequestVerificationToken = $('input[name=__RequestVerificationToken]').val();
            return data;
        }

    </script>
}