@using AMH.Common;
@using AMHAdmin.Pages;
@using System.Web.Optimization;
@using AMHAdmin.Infrastructure;

@Html.AntiForgeryToken()

@{ ViewBag.Title = "Users"; }

<link rel="stylesheet" href="https://pro.fontawesome.com/releases/v5.10.0/css/all.css" integrity="sha384-AYmEC3Yw5cVb3ZcuHtOA93w35dYTsvhLPVnYs9eStHfGJvOvKxVfELGroGkvsg+p" crossorigin="anonymous" />

<style>
    .checkbox2 {
        width: 25px;
        height: 25px;
    }

    thead {
        background: #0069D9;
        color: white;
    }

    .row {
        margin: 0 !important;
    }

    .activ {
        background: linear-gradient(to right, #0069D9, #0069D9);
        color: white;
    }

    .has-error .checkbox, .has-error .checkbox-inline, .has-error .control-label, .has-error .form-control-feedback, .has-error .help-block, .has-error .radio, .has-error .radio-inline, .has-error.checkbox label, .has-error.checkbox-inline label, .has-error.radio label, .has-error.radio-inline label {
        color: #e73d4a
    }

    .has-error .form-control {
        bUsers-color: #e73d4a;
        -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.075);
        box-shadow: inset 0 1px 1px rgba(0,0,0,.075)
    }

        .has-error .form-control:focus {
            bUsers-color: #d71b29;
            -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.075),0 0 6px #f2989f;
            box-shadow: inset 0 1px 1px rgba(0,0,0,.075),0 0 6px #f2989f
        }

    .has-error .input-group-addon {
        color: #e73d4a;
        bUsers-color: #e73d4a;
        background-color: #fbe1e3
    }

    .autocomplete-items {
        position: absolute;
        bUsers: 1px solid #d4d4d4;
        bUsers-bottom: none;
        z-index: 99;
        top: 40px;
        left: 0;
        right: 0;
        box-shadow: 0 39px 70px 0 rgba(0, 0, 0, 0.1);
        background-color: #ffffff;
    }

        .autocomplete-items > div {
            padding: 10px;
            cursor: pointer;
            bUsers-bottom: 1px solid #ccc;
        }

            .autocomplete-items > div:hover {
                background: #fbfbfb;
            }

    .addDelete {
        color: black !important;
        background: #e9e9e9 !important;
    }

    .hideDelete {
        display: none !important;
    }

    .text-c-dark {
        color: #000;
    }

    .device-active .active .card {
        background: #157aec;
        cursor: pointer;
    }

    .device-active .active .text-c-dark {
        color: #fff !important;
    }

        .device-active .active .text-c-dark .icon {
            background-color: #0069D9;
            bUsers: none;
        }

    .icon-box {
        background: #eff1f4;
    }

        .icon-box:hover {
            background: #0e67cc !important;
        }

    .btn-primary {
        color: #fff !important;
        background-color: #0596F8 !important;
        border-color: #0596F8 !important;
        box-shadow: inset 0 1px 0 rgb(255 255 255 / 15%), 0 1px 1px rgb(0 0 0 / 8%) !important;
    }

    div.dt-buttons {
        float: right !important;
    }
</style>


<div class="content container-fluid">
    <div class="row">
        <div class="col-8">
            <h5>Users</h5>
        </div>
    </div>
    <div class="row">
        <div class="col-xxl-12 col-lg-12 col-md-12 col-12 mb-3">
            @Html.AntiForgeryToken()
            <div class="portlet-body table-responsive" id="divFeedbackTable">
                <table class="table table-striped table-bUsersed table-hover" id="FeedbackTable"></table>
            </div>
        </div>
    </div>
</div>
<div class="modal" id="advFilter" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h6 class="title" id="defaultModalLabel">User Filters</h6>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row clearfix">
                    <div class="col-sm-6">
                        <label>Start Date</label>
                        <div class="form-group">
                            <input type="date" class="form-control" name="FromDate" id="FromDate" />
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <label>End Date</label>
                        <div class="form-group">
                            <input type="date" class="form-control" name="ToDate " id="ToDate" />
                        </div>
                    </div>


                </div>
            </div>
            <div class="modal-footer">
                <button id="btnSearch" type="button" class="btn btn-primary saveBtn" onclick="SearchReset(false)">Search</button>
                <button class="btn btn-primary loading" type="button" disabled style="display:none;float:right;">
                    <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                    Searching...
                </button>
                <button type="button" data-dismiss="modal" class="btn btn-secondary closeBtn">Cancel</button>
            </div>
        </div>
    </div>
</div>

<!--<div class="modal" id="viewproducts" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">-->
@*<div class="modal-header">
        <h6 class="title" id="defaultModalLabel">Products</h6>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>*@
<!--<div class="row">
                <div class="col-xxl-12 col-lg-12 col-md-12 col-12 mb-3">
                    @Html.AntiForgeryToken()
                    <div class="portlet-body table-responsive" id="divOrderProductTable">
                        <table class="table table-striped table-bUsersed table-hover" id="OrderProductTable"></table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>-->

@section Scripts {
    <script>
        $(document).ready(() => {
            OrderDataTable.init();
            $("#UsersTable_filter").hide();

            $("#ManageFeedbackForm").validate({
                rules: {

                },
                messages: {


                },

                errorPlacement: function (error, element) {
                    if (element.is(":radio")) {
                        error.appendTo(element.parents(".form-group"));
                    } else {
                        // This is the default behavior
                        error.insertAfter(element);
                    }
                },
                submitHandler: function (form) {
                    AddFeedback();
                }
            });


        });


        var OrderDataTable = function () {
            let initTable2 = function () {
                let table = $('#FeedbackTable');

                let oTable = table.dataTable({
                    "stateSave": true,
                    "autoWidth": false,
                    "paging": true,
                    // Internationalisation. For more info refer to http://datatables.net/manual/i18n
                    "language": {
                        "aria": {
                            "sortAscending": ": activate to sort column ascending",
                            "sortDescending": ": activate to sort column descending"
                        },
                        "emptyTable": "No data available in table",
                        "info": "Showing _START_ to _END_ of _TOTAL_ entries",
                        "infoEmpty": "No entries found",
                        "infoFiltered": "(filtered1 from MAX total entries)",
                        //"lengthMenu": "MENU entries",
                        "search": "Search:",
                        "zeroRecords": "No matching records found"
                    },
                    "pageLength": 10,
                    "processing": true,
                    "serverSide": true,
                    "ajax": {
                        async: true,
                        url: '@Url.Action(Actions.Users_All, Controllers.Users)',
                        type: "post",
                        data: SearchCriteria(),
                    },
                    "columns": [
                       {
                            "title": "User Name", "data": "FirstName",
                            "render": function (data, type, row) {
                                let htmlData = "";
                                //htmlData += `<p class="mb-0">${row["FirstName"] == "" || row["FirstName"] == null ? '-' : row["FirstName"]}</p >`;
                                htmlData += `<p class="mb-0">${row["FirstName"] + " " + row["LastName"]}</p>`;
                                return htmlData;
                            }
                            , "orderable": false, "width": "3%"
                        },
                        {
                            "title": "Email", "data": "Email",
                            "render": function (data, type, row) {
                                let htmlData = "";
                                htmlData = `<p class="mb-0">${row["Email"]}</p>`;

                                return htmlData;
                            }
                            , "orderable": false, "width": "3%"
                        },
                        {
                            "title": "Contact No", "data": "ContactNo",
                            "render": function (data, type, row) {
                                let htmlData = "";
                                htmlData = `<p class="mb-0">${row["ContactNo"]}</p>`;

                                return htmlData;
                            }
                            , "orderable": false, "width": "3%"
                        },
                        {
                            "title": "Birth Date", "data": "BirthDateStr",
                            "render": function (data, type, row) {
                                let htmlData = "";
                                htmlData = `<p class="mb-0">${row["BirthDateStr"]}</p>`;

                                return htmlData;
                            }
                            , "orderable": false, "width": "3%"
                        },
                        {
                            "title": "Address", "data": "Address",
                            "render": function (data, type, row) {
                                let htmlData = "";
                                htmlData = `<p class="mb-0">${row["Address"]}</p>`;

                                return htmlData;
                            }
                            , "orderable": false, "width": "3%"
                        },
                        {
                            "title": "Is Active ?", "data": "IsActive",
                            "render": function (data, type, row) {
                                let htmlData = "";

                                if (row["IsActive"] == 1) {
                                    htmlData = `<button title="Active" onclick="InActiveMessage('${row["Users_Id"]}');" class="badge badge-primary">Active</button>`;
                                } else {
                                    htmlData = `<button title="In-Active" onclick="ActiveMessage('${row["Users_Id"]}');" class="badge badge-danger">In-Active</button>`;
                                }

                                return htmlData;
                            }
                            , "orderable": false, "width": "3%"
                        },
                    ],
                    // setup buttons extentension: http://datatables.net/extensions/buttons/
                        "buttons": [
                            //{ extend: 'excel', className: 'btn green btn-outline mb-3 mt-1', exportOptions: { columns: [0, 1, 2] } },
                            //{ extend: 'pdf', className: 'btn green btn-outline mb-3 mt-1', exportOptions: { columns: [0, 1, 2] } },
                            //{ extend: 'print', className: 'btn green btn-outline mb-3 mt-1', exportOptions: { columns: [0, 1, 2] } },

                            //{
                            //    text: 'Filters',
                            //    className: 'btn btn-success mb-3 mt-1',
                            //    action: function (e, dt, node, config) {
                            //        advFilter();
                            //    }
                            //},
                            //{
                            //    text: 'Reset',
                            //    className: 'btn btn-success mb-3 mt-1',
                            //    action: function (e, dt, node, config) {
                            //        SearchReset(true);
                            //        $("#UsersTable_filter").hide();

                            //    }
                            //},

                        ],

                        // setup responsive extension: http://datatables.net/extensions/responsive/
                       // responsive: true,

                        "lengthMenu": [
                            [5, 10, 15, 20, 1000],
                            [5, 10, 15, 20, 1000] // change per page values here
                        ],
                        // set the initial value

                        "dom": "<'row' <'col-md-12'B>><'row'<'col-md-6 col-sm-12'l><'col-md-6 col-sm-12'f>r><'table-scrollable't><'row'<'col-md-5 col-sm-12'i><'col-md-7 col-sm-12'p>>", // horizobtal scrollable datatable

                        // Uncomment below line("dom" parameter) to fix the dropdown overflow issue in the datatable cells. The default datatable layout
                        // setup uses scrollable div(table-scrollable) with overflow:auto to enable vertical scroll(see: assets/global/plugins/datatables/plugins/bootstrap/dataTables.bootstrap.js).
                        // So when dropdowns used the scrollable div should be removed.
                        //"dom": "<'row' <'col-md-12'T>><'row'<'col-md-6 col-sm-12'l><'col-md-6 col-sm-12'f>r>t<'row'<'col-md-5 col-sm-12'i><'col-md-7 col-sm-12'p>>",
                });
            }

            return {
                //main function to initiate the module
                init: function () {
                    if ($.fn.DataTable.isDataTable("#FeedbackTable")) {
                        $('#FeedbackTable').dataTable().fnDestroy();
                        $('#divFeedbackTable').html('<table class="table table-striped" width="100%" id="FeedbackTable"></table>');
                    }
                    initTable2();
                }
            };
        }();

        //Data fillter function
        function SearchCriteria() {
            try {
                var param = {};
                param["FromDate"] = $("#FromDate").val();
                param["ToDate"] = $("#ToDate").val();
                return addRequestVerificationToken(param);
            } catch (e) { }
        }
        function advFilter() {
            $('#advFilter').modal('show');
        }
        const SearchReset = (isReset = false) => {

            if (isReset == true) {
                $('#FromDate').val('');
                $('#ToDate').val('');
            }
            OrderDataTable.init();
            $('#advFilter').modal('hide');
            $("#UsersTable_filter").hide();
        }

        function advFilter() {
            $('#advFilter').modal('show');
        }
        function InActiveMessage(User_Id) {
            swal({
                title: "Are you sure ?",
                text: "You will be in-activating the User !",
                icon: "warning",
                buttons: true,
                dangerMode: true,
            })
            .then((willupdate) => {
                if (willupdate) {
                    UpdateStatus(User_Id);
                }
            });
        }

        //ActiveMessage swal function
        function ActiveMessage(User_Id) {
            swal({
                title: "Are you sure ?",
                text: "You will be activating the User !",
                icon: "warning",
                buttons: true,
                dangerMode: true,
            })
            .then((willupdate) => {
                if (willupdate) {
                    UpdateStatus(User_Id);
                }
            });
        }

        //status ActiveInActive change function
        function UpdateStatus(User_Id) {
            $.ajax({
                type: "POST",
                url: '@Url.Action(Actions.Users_ActInact, Controllers.Users)',
                data: { Users_Id: User_Id },
                dataType: 'json',
                success: function (response) {
                    OrderDataTable.init();
                    if (response.Code == 200) {
                        swal({
                            title: "Success",
                            text: response.Message,
                            icon: "success",
                            timer: 2000
                        })
                    } else {
                        swal({
                            title: "Warning",
                            text: response.Message,
                            icon: "warning"
                        })
                    }
                },
                error: function (error) {
                    swal({
                        title: "Warning",
                        text: response.Message,
                        icon: "warning"
                    })
                }
            });
        }

        function addRequestVerificationToken(data) {
            data.__RequestVerificationToken = $('input[name=__RequestVerificationToken]').val();
            return data;
        }

    </script>
}